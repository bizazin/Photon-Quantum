// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<EStats, FP>))]
  public unsafe class DictionaryEntry_EStats_FP : Quantum.Prototypes.DictionaryEntry {
    public Quantum.QEnum32<EStats> Key;
    public FP Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AbilityCardId))]
  public unsafe partial class AbilityCardIdPrototype : ComponentPrototype<Quantum.AbilityCardId> {
    public Quantum.QEnum32<EAbilityCardId> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.AbilityCardId result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AbilityCardId component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AbilityCardId result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Affected))]
  public unsafe partial class AffectedPrototype : ComponentPrototype<Quantum.Affected> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Affected result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Affected component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Affected result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Applied))]
  public unsafe partial class AppliedPrototype : ComponentPrototype<Quantum.Applied> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Applied result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Applied component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Applied result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ApplierStatusLink))]
  public unsafe partial class ApplierStatusLinkPrototype : ComponentPrototype<Quantum.ApplierStatusLink> {
    public Int32 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.ApplierStatusLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ApplierStatusLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ApplierStatusLink result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Armament))]
  public unsafe partial class ArmamentPrototype : ComponentPrototype<Quantum.Armament> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Armament result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Armament component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Armament result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttackPreparingDelay))]
  public unsafe partial class AttackPreparingDelayPrototype : ComponentPrototype<Quantum.AttackPreparingDelay> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.AttackPreparingDelay result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AttackPreparingDelay component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AttackPreparingDelay result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BaseStats))]
  public unsafe partial class BaseStatsPrototype : ComponentPrototype<Quantum.BaseStats> {
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_EStats_FP[] Value = {};
    partial void MaterializeUser(Frame frame, ref Quantum.BaseStats result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.BaseStats component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.BaseStats result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var dict = frame.AllocateDictionary(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            Quantum.EStats tmpKey = default;
            FP tmpValue = default;
            tmpKey = this.Value[i].Key;
            tmpValue = this.Value[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.BowShotWeapon))]
  public unsafe partial class BowShotWeaponPrototype : ComponentPrototype<Quantum.BowShotWeapon> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.BowShotWeapon result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.BowShotWeapon component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.BowShotWeapon result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CollectTargetsInterval))]
  public unsafe partial class CollectTargetsIntervalPrototype : ComponentPrototype<Quantum.CollectTargetsInterval> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.CollectTargetsInterval result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CollectTargetsInterval component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CollectTargetsInterval result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CollectTargetsTimer))]
  public unsafe partial class CollectTargetsTimerPrototype : ComponentPrototype<Quantum.CollectTargetsTimer> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.CollectTargetsTimer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CollectTargetsTimer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CollectTargetsTimer result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CollectingTargetsContinuously))]
  public unsafe partial class CollectingTargetsContinuouslyPrototype : ComponentPrototype<Quantum.CollectingTargetsContinuously> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.CollectingTargetsContinuously result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CollectingTargetsContinuously component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CollectingTargetsContinuously result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Cooldown))]
  public unsafe partial class CooldownPrototype : ComponentPrototype<Quantum.Cooldown> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Cooldown result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Cooldown component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Cooldown result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CooldownLeft))]
  public unsafe partial class CooldownLeftPrototype : ComponentPrototype<Quantum.CooldownLeft> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.CooldownLeft result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CooldownLeft component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CooldownLeft result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CooldownUp))]
  public unsafe partial class CooldownUpPrototype : ComponentPrototype<Quantum.CooldownUp> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.CooldownUp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CooldownUp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CooldownUp result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CurrentHp))]
  public unsafe partial class CurrentHpPrototype : ComponentPrototype<Quantum.CurrentHp> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.CurrentHp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CurrentHp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CurrentHp result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CurrentTarget))]
  public unsafe class CurrentTargetPrototype : ComponentPrototype<Quantum.CurrentTarget> {
    public Quantum.Prototypes.PlayerLinkPrototype Value;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CurrentTarget component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CurrentTarget result, in PrototypeMaterializationContext context = default) {
        this.Value.Materialize(frame, ref result.Value, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.DamageEffect))]
  public unsafe partial class DamageEffectPrototype : ComponentPrototype<Quantum.DamageEffect> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.DamageEffect result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.DamageEffect component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.DamageEffect result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Dead))]
  public unsafe partial class DeadPrototype : ComponentPrototype<Quantum.Dead> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Dead result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Dead component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Dead result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Destructed))]
  public unsafe partial class DestructedPrototype : ComponentPrototype<Quantum.Destructed> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Destructed result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Destructed component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Destructed result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Direction))]
  public unsafe partial class DirectionPrototype : ComponentPrototype<Quantum.Direction> {
    public FPVector3 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Direction result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Direction component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Direction result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Duration))]
  public unsafe partial class DurationPrototype : ComponentPrototype<Quantum.Duration> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Duration result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Duration component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Duration result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Effect))]
  public unsafe partial class EffectPrototype : ComponentPrototype<Quantum.Effect> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Effect result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Effect component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Effect result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.EffectSetup))]
  public unsafe partial class EffectSetupPrototype : StructPrototype {
    public Quantum.QEnum32<EffectTypeId> EffectTypeId;
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.EffectSetup result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.EffectSetup result, in PrototypeMaterializationContext context = default) {
        result.EffectTypeId = this.EffectTypeId;
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.EffectSetups))]
  public unsafe partial class EffectSetupsPrototype : ComponentPrototype<Quantum.EffectSetups> {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.EffectSetupPrototype[] Value = {};
    partial void MaterializeUser(Frame frame, ref Quantum.EffectSetups result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.EffectSetups component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.EffectSetups result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var list = frame.AllocateList(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            Quantum.EffectSetup tmp = default;
            this.Value[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.EffectValue))]
  public unsafe partial class EffectValuePrototype : ComponentPrototype<Quantum.EffectValue> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.EffectValue result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.EffectValue component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.EffectValue result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Fire))]
  public unsafe partial class FirePrototype : ComponentPrototype<Quantum.Fire> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Fire result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Fire component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Fire result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.FollowingProducer))]
  public unsafe partial class FollowingProducerPrototype : ComponentPrototype<Quantum.FollowingProducer> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.FollowingProducer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.FollowingProducer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.FollowingProducer result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Freeze))]
  public unsafe partial class FreezePrototype : ComponentPrototype<Quantum.Freeze> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Freeze result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Freeze component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Freeze result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.HealEffect))]
  public unsafe partial class HealEffectPrototype : ComponentPrototype<Quantum.HealEffect> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.HealEffect result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.HealEffect component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.HealEffect result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public Button LeftButton;
    public Button RightButton;
    public Button UpButton;
    public Button DownButton;
    public FPVector3 Direction;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result.LeftButton = this.LeftButton;
        result.RightButton = this.RightButton;
        result.UpButton = this.UpButton;
        result.DownButton = this.DownButton;
        result.Direction = this.Direction;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InstantRotation))]
  public unsafe partial class InstantRotationPrototype : ComponentPrototype<Quantum.InstantRotation> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.InstantRotation result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InstantRotation component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InstantRotation result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.LookDirection))]
  public unsafe partial class LookDirectionPrototype : ComponentPrototype<Quantum.LookDirection> {
    public FPVector3 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.LookDirection result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.LookDirection component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.LookDirection result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MaxHp))]
  public unsafe partial class MaxHpPrototype : ComponentPrototype<Quantum.MaxHp> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.MaxHp result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MaxHp component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MaxHp result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MovementAvailable))]
  public unsafe partial class MovementAvailablePrototype : ComponentPrototype<Quantum.MovementAvailable> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.MovementAvailable result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MovementAvailable component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MovementAvailable result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Moving))]
  public unsafe partial class MovingPrototype : ComponentPrototype<Quantum.Moving> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Moving result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Moving component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Moving result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MuzzleOffset))]
  public unsafe partial class MuzzleOffsetPrototype : ComponentPrototype<Quantum.MuzzleOffset> {
    public FPVector3 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.MuzzleOffset result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MuzzleOffset component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MuzzleOffset result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.OrbitCenterFollowTarget))]
  public unsafe class OrbitCenterFollowTargetPrototype : ComponentPrototype<Quantum.OrbitCenterFollowTarget> {
    public MapEntityId Value;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.OrbitCenterFollowTarget component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.OrbitCenterFollowTarget result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.Value, in context, out result.Value);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.OrbitCenterPosition))]
  public unsafe partial class OrbitCenterPositionPrototype : ComponentPrototype<Quantum.OrbitCenterPosition> {
    public FPVector3 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.OrbitCenterPosition result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.OrbitCenterPosition component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.OrbitCenterPosition result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.OrbitLevel))]
  public unsafe partial class OrbitLevelPrototype : ComponentPrototype<Quantum.OrbitLevel> {
    public Quantum.QEnum32<EOrbitLevel> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.OrbitLevel result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.OrbitLevel component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.OrbitLevel result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.OrbitPhase))]
  public unsafe partial class OrbitPhasePrototype : ComponentPrototype<Quantum.OrbitPhase> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.OrbitPhase result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.OrbitPhase component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.OrbitPhase result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.OrbitalShotWeapon))]
  public unsafe partial class OrbitalShotWeaponPrototype : ComponentPrototype<Quantum.OrbitalShotWeapon> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.OrbitalShotWeapon result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.OrbitalShotWeapon component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.OrbitalShotWeapon result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Owner))]
  public unsafe class OwnerPrototype : ComponentPrototype<Quantum.Owner> {
    public Quantum.Prototypes.PlayerLinkPrototype Link;
    public Int32 TeamIndex;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Owner component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Owner result, in PrototypeMaterializationContext context = default) {
        this.Link.Materialize(frame, ref result.Link, in context);
        result.TeamIndex = this.TeamIndex;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PendingShotInterval))]
  public unsafe partial class PendingShotIntervalPrototype : ComponentPrototype<Quantum.PendingShotInterval> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PendingShotInterval result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PendingShotInterval component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PendingShotInterval result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PendingShotsCount))]
  public unsafe partial class PendingShotsCountPrototype : ComponentPrototype<Quantum.PendingShotsCount> {
    public Int32 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PendingShotsCount result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PendingShotsCount component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PendingShotsCount result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Period))]
  public unsafe partial class PeriodPrototype : ComponentPrototype<Quantum.Period> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Period result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Period component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Period result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerActionState))]
  public unsafe partial class PlayerActionStatePrototype : ComponentPrototype<Quantum.PlayerActionState> {
    public Quantum.QEnum32<EPlayerActionState> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerActionState result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerActionState component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerActionState result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerAnimationState))]
  public unsafe partial class PlayerAnimationStatePrototype : ComponentPrototype<Quantum.PlayerAnimationState> {
    public Quantum.Prototypes.PlayerAnimationStateStructPrototype Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerAnimationState result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerAnimationState component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerAnimationState result, in PrototypeMaterializationContext context = default) {
        this.Value.Materialize(frame, ref result.Value, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerAnimationStateStruct))]
  public unsafe partial class PlayerAnimationStateStructPrototype : StructPrototype {
    public Quantum.QEnum32<EPlayerAnimationState> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerAnimationStateStruct result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.PlayerAnimationStateStruct result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLifeState))]
  public unsafe partial class PlayerLifeStatePrototype : ComponentPrototype<Quantum.PlayerLifeState> {
    public Quantum.QEnum32<EPlayerLifeState> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLifeState result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLifeState component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLifeState result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef Value;
    public MapEntityId Entity;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        PrototypeValidator.FindMapEntity(this.Entity, in context, out result.Entity);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Processed))]
  public unsafe partial class ProcessedPrototype : ComponentPrototype<Quantum.Processed> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Processed result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Processed component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Processed result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ProcessedTargets))]
  public unsafe class ProcessedTargetsPrototype : ComponentPrototype<Quantum.ProcessedTargets> {
    [DynamicCollectionAttribute()]
    public MapEntityId[] Value = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ProcessedTargets component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ProcessedTargets result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var list = frame.AllocateList(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.Value[i], in context, out tmp);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ProcessingDeath))]
  public unsafe partial class ProcessingDeathPrototype : ComponentPrototype<Quantum.ProcessingDeath> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.ProcessingDeath result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ProcessingDeath component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ProcessingDeath result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ProducerId))]
  public unsafe class ProducerIdPrototype : ComponentPrototype<Quantum.ProducerId> {
    public MapEntityId Value;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ProducerId component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ProducerId result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.Value, in context, out result.Value);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ProjectilesCount))]
  public unsafe partial class ProjectilesCountPrototype : ComponentPrototype<Quantum.ProjectilesCount> {
    public Int32 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.ProjectilesCount result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ProjectilesCount component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ProjectilesCount result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Radius))]
  public unsafe partial class RadiusPrototype : ComponentPrototype<Quantum.Radius> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Radius result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Radius component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Radius result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Reached))]
  public unsafe partial class ReachedPrototype : ComponentPrototype<Quantum.Reached> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Reached result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Reached component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Reached result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ReadyToCollectTargets))]
  public unsafe partial class ReadyToCollectTargetsPrototype : ComponentPrototype<Quantum.ReadyToCollectTargets> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.ReadyToCollectTargets result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ReadyToCollectTargets component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ReadyToCollectTargets result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.RotationSpeed))]
  public unsafe partial class RotationSpeedPrototype : ComponentPrototype<Quantum.RotationSpeed> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.RotationSpeed result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.RotationSpeed component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.RotationSpeed result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SelfDestructTimer))]
  public unsafe partial class SelfDestructTimerPrototype : ComponentPrototype<Quantum.SelfDestructTimer> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.SelfDestructTimer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SelfDestructTimer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SelfDestructTimer result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Speed))]
  public unsafe partial class SpeedPrototype : ComponentPrototype<Quantum.Speed> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.Speed result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Speed component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Speed result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatChange))]
  public unsafe partial class StatChangePrototype : ComponentPrototype<Quantum.StatChange> {
    public Quantum.QEnum32<EStats> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.StatChange result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StatChange component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StatChange result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatsModifiers))]
  public unsafe partial class StatsModifiersPrototype : ComponentPrototype<Quantum.StatsModifiers> {
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_EStats_FP[] Value = {};
    partial void MaterializeUser(Frame frame, ref Quantum.StatsModifiers result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StatsModifiers component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StatsModifiers result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var dict = frame.AllocateDictionary(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            Quantum.EStats tmpKey = default;
            FP tmpValue = default;
            tmpKey = this.Value[i].Key;
            tmpValue = this.Value[i].Value;
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Status))]
  public unsafe partial class StatusPrototype : ComponentPrototype<Quantum.Status> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Status result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Status component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Status result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatusSetup))]
  public unsafe partial class StatusSetupPrototype : StructPrototype {
    public Quantum.QEnum32<EStatusTypeId> StatusTypeId;
    public FP Value;
    public FP Duration;
    public FP Period;
    partial void MaterializeUser(Frame frame, ref Quantum.StatusSetup result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.StatusSetup result, in PrototypeMaterializationContext context = default) {
        result.StatusTypeId = this.StatusTypeId;
        result.Value = this.Value;
        result.Duration = this.Duration;
        result.Period = this.Period;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatusSetups))]
  public unsafe partial class StatusSetupsPrototype : ComponentPrototype<Quantum.StatusSetups> {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.StatusSetupPrototype[] Value = {};
    partial void MaterializeUser(Frame frame, ref Quantum.StatusSetups result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StatusSetups component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StatusSetups result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var list = frame.AllocateList(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            Quantum.StatusSetup tmp = default;
            this.Value[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.StatusTypeId))]
  public unsafe partial class StatusTypeIdPrototype : ComponentPrototype<Quantum.StatusTypeId> {
    public Quantum.QEnum32<EStatusTypeId> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.StatusTypeId result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.StatusTypeId component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.StatusTypeId result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TargetBuffer))]
  public unsafe class TargetBufferPrototype : ComponentPrototype<Quantum.TargetBuffer> {
    [DynamicCollectionAttribute()]
    public MapEntityId[] Value = {};
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TargetBuffer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TargetBuffer result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var list = frame.AllocateList(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.Value[i], in context, out tmp);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TargetId))]
  public unsafe class TargetIdPrototype : ComponentPrototype<Quantum.TargetId> {
    public MapEntityId Value;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TargetId component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TargetId result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.Value, in context, out result.Value);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TargetLayerMask))]
  public unsafe partial class TargetLayerMaskPrototype : ComponentPrototype<Quantum.TargetLayerMask> {
    public Int32 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.TargetLayerMask result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TargetLayerMask component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TargetLayerMask result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TargetLimit))]
  public unsafe partial class TargetLimitPrototype : ComponentPrototype<Quantum.TargetLimit> {
    public Int32 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.TargetLimit result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TargetLimit component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TargetLimit result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TargetRelations))]
  public unsafe partial class TargetRelationsPrototype : ComponentPrototype<Quantum.TargetRelations> {
    [DynamicCollectionAttribute()]
    public Quantum.QEnum32<ETeamRelation>[] Value = {};
    partial void MaterializeUser(Frame frame, ref Quantum.TargetRelations result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TargetRelations component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TargetRelations result, in PrototypeMaterializationContext context = default) {
        if (this.Value.Length == 0) {
          result.Value = default;
        } else {
          var list = frame.AllocateList(out result.Value, this.Value.Length);
          for (int i = 0; i < this.Value.Length; ++i) {
            Quantum.ETeamRelation tmp = default;
            tmp = this.Value[i];
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TimeLeft))]
  public unsafe partial class TimeLeftPrototype : ComponentPrototype<Quantum.TimeLeft> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.TimeLeft result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TimeLeft component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TimeLeft result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TimeSinceLastTick))]
  public unsafe partial class TimeSinceLastTickPrototype : ComponentPrototype<Quantum.TimeSinceLastTick> {
    public FP Value;
    partial void MaterializeUser(Frame frame, ref Quantum.TimeSinceLastTick result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TimeSinceLastTick component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TimeSinceLastTick result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Unapplied))]
  public unsafe partial class UnappliedPrototype : ComponentPrototype<Quantum.Unapplied> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.Unapplied result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Unapplied component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Unapplied result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.WeaponId))]
  public unsafe partial class WeaponIdPrototype : ComponentPrototype<Quantum.WeaponId> {
    public Quantum.QEnum32<EWeaponId> Value;
    partial void MaterializeUser(Frame frame, ref Quantum.WeaponId result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.WeaponId component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.WeaponId result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.WeaponRef))]
  public unsafe class WeaponRefPrototype : ComponentPrototype<Quantum.WeaponRef> {
    public MapEntityId Value;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.WeaponRef component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.WeaponRef result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.Value, in context, out result.Value);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.WorldPosition))]
  public unsafe partial class WorldPositionPrototype : ComponentPrototype<Quantum.WorldPosition> {
    public FPVector3 Value;
    partial void MaterializeUser(Frame frame, ref Quantum.WorldPosition result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.WorldPosition component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.WorldPosition result, in PrototypeMaterializationContext context = default) {
        result.Value = this.Value;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
